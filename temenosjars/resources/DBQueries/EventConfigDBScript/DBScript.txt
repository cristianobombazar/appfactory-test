//for RFQ we need to create eventtype and event subtypes in eventType table and eventsubtype tables and 
also we need to insert event subtypes in eventconsumertypes table

//for RFQ eventtype=FX_MANAGEMENT;
//event subtype for acceptdeal=RFQ_DEAL_ACCEPT;
//event subtype for reject deal=RFQ_DEAL_REJECT;


INSERT INTO `dbxdb`.`eventtype` (`id`,`Name`,`ActivityType`) VALUES ("FX_MANAGEMENT","RFQ","CUSTOMER");

INSERT INTO dbxdb.eventsubtype
(id, eventtypeid, Name, Description, createdby, modifiedby, createdts, lastmodifiedts, synctimestamp, softdeleteflag, externalSystem)
VALUES('RFQ_DEAL_ACCEPT', 'FX_MANAGEMENT', 'AcceptDeal', '', '', '', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 0, 0);
INSERT INTO dbxdb.eventsubtype
(id, eventtypeid, Name, Description, createdby, modifiedby, createdts, lastmodifiedts, synctimestamp, softdeleteflag, externalSystem)
VALUES('RFQ_DEAL_REJECT', 'FX_MANAGEMENT', 'RejectDeal', '', '', '', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 0, 0);

INSERT INTO `dbxdb`.`eventconsumertypes` (`ServiceId`,`OperationId`,`EventType`)VALUES('Audit','pushAudit','FX_MANAGEMENT'); 


//Audit logs for evaluation API 
//for BOP evaluation API we need to create eventtype and event subtypes in eventType table and eventsubtype tables and 
also we need to insert event subtypes in eventconsumertypes table
     
     EventType - BOP
     Subtype - BOP_EVALUATION_RESULT
     
     
INSERT INTO `dbxdb`.`eventtype` (`id`,`Name`,`ActivityType`) VALUES ("BOP","Bop","CUSTOMER");

INSERT INTO dbxdb.eventsubtype
(id, eventtypeid, Name, Description, createdby, modifiedby, createdts, lastmodifiedts, synctimestamp, softdeleteflag, externalSystem)
VALUES('BOP_EVALUATION_RESULT', 'BOP', 'Bop_Evaluation_result', '', '', '', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 0, 0);

INSERT INTO `dbxdb`.`eventconsumertypes` (`ServiceId`,`OperationId`,`EventType`)VALUES('Audit','pushAudit','BOP'); 

EVENT Changes for OLB audit logs(9933)

INSERT INTO dbxdb.eventsubtype
(id, eventtypeid, Name, Description, createdby, modifiedby, createdts, lastmodifiedts, synctimestamp, softdeleteflag, externalSystem)
VALUES('UPDATE_SIGNATORY_GROUP', 'APPROVAL_MATRIX', 'updateSignatoryGroup', '', '', '', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 0, 0);
INSERT INTO dbxdb.eventsubtype
(id, eventtypeid, Name, Description, createdby, modifiedby, createdts, lastmodifiedts, synctimestamp, softdeleteflag, externalSystem)
VALUES('UPDATE_USER_ROLES', 'USER', 'UpdateUserRoles', '', '', '', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 0, 0);

INSERT INTO dbxdb.eventsubtype
(id, eventtypeid, Name, Description, createdby, modifiedby, createdts, lastmodifiedts, synctimestamp, softdeleteflag, externalSystem)
VALUES('CREATE_USER', 'USER', 'CreateUser', '', '', '', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 0, 0);

//PreBook event

INSERT INTO `dbxdb`.`eventtype` (`id`,`Name`,`ActivityType`) VALUES ("PAYMENT","Payment","CUSTOMER");

INSERT INTO dbxdb.eventsubtype
(id, eventtypeid, Name, Description, createdby, modifiedby, createdts, lastmodifiedts, synctimestamp, softdeleteflag, externalSystem)
VALUES('PREBOOK_DEAL_RESULT', 'PAYMENT', 'Pre_BookDeal_result', '', '', '', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 0, 0);

INSERT INTO `dbxdb`.`eventconsumertypes` (`ServiceId`,`OperationId`,`EventType`)VALUES('Audit','pushAudit','PAYMENT'); 

//inserted eventSubtype for transction withdraw logs
INSERT INTO `dbxdb`.`eventsubtype` (`id`, `eventtypeid`, `Name`, `Description`) VALUES ('WithdrawnINTERNATIONAL_ACCOUNT_FUND_TRANSFER', 'APPROVAL_GENERAL_TRANSACTION_CANCELLATION_REQUEST', 'International Transfer Request Withdrawn, Initiator', 'International Transfer Request Withdrawn, Initiator');
